@page "/makeappointment"
<MudCalendar Items="events"
			 ShowDatePicker="true"
			 Outlined="true"
			 DayStartTime="new TimeOnly(9,0,0)"
			 CellClicked="CellClicked"

			 DayTimeInterval="CalendarTimeInterval.Minutes15" >
	<DayTemplate>
		<div style="width: 100%; height: 100%; border: 2px solid @GetColor(((CustomItem)context).Color)">
			<div style="background-color: @GetColor(((CustomItem)context).Color)">
				<MudText Style="color: #ffffff;" Typo="Typo.body1" Align="MudBlazor.Align.Center">@(((CustomItem)context).Title)</MudText>
			</div>
			<div class="pa-2">
				<MudText Typo="Typo.body2">@context.Text</MudText>
			</div>
		</div>
	</DayTemplate>
	<MonthTemplate>
		<div class="d-flex gap-1">
			<MudIcon Icon="@Icons.Material.Filled.Circle" Color="Color.Secondary" Size="Size.Small" />
			<div>@context.Text</div>
		</div>
	</MonthTemplate>
	<WeekTemplate>
		<div class="pa-1" style="width: 100%; height: 100%;">
			<MudChip T="string" Variant="Variant.Outlined" Color="Color.Tertiary" Class="ma-0" Style="width: 100%; height: 100%;">@context.Text</MudChip>
		</div>
	</WeekTemplate>

</MudCalendar>
@code {

	[Inject]
	private IDialogService DialogService { get; set; } = default!;
	private string GetColor(Color color) => $"var(--mud-palette-{color.ToDescriptionString()})";
	private Task CellClicked(DateTime dateTime)
	{
		return DialogService.ShowMessageBox("Cell Clicked", dateTime.ToString(Thread.CurrentThread.CurrentCulture));
	}
	private List<CustomItem> events = new()
	{
		new CustomItem
		{
			Start = DateTime.Today.AddHours(10),
			End = DateTime.Today.AddHours(11),
			Title = "Event today",
			Location = "Over here",
			Text = "This is an event today",
			Color = Color.Secondary,
			 Guest = new Guest
			{
				Civility="M.",
				FamilyName="Menvu",
				GivenName="Gérard"
			}
		},
		new CustomItem
		{
			Start = DateTime.Today.AddDays(1).AddHours(11),
			End = DateTime.Today.AddDays(1).AddHours(12.5),
			Title = "Event tomorrow",
			Location = "Over there",

			Text = "This is an event tomorrow",
			Color = Color.Tertiary,
			Guest = new Guest
			{
				Civility="Mme.",
				FamilyName="Fatoun",
				GivenName="Kimberley"
			}
		}
	};
	public class Guest
	{
		public string Civility { get; set; } = "";
		public string FamilyName { get; set; } = "";
		public string GivenName { get; set; } = "";
	}
	private class CustomItem : CalendarItem
	{
		public string Title { get; set; } = string.Empty;
		public string Location { get; set; } = string.Empty;
		public Color Color { get; set; } = Color.Primary;
		public Guest Guest { get; set; } = new();
	}


}