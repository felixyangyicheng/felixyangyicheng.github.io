@page "/"

@inject IConfiguration _configuration

<MudContainer>
    @if (loading)
    {

        <Pulse />
    }
    <div style="width: 100%; height: 70vh;">
        <Markdown @ref="MarkdownSetValue" Value="@MarkdownString" ValueChanged="SetMarkdownString" @bind-Html="@HtmlString" IsViewer="true" />

    </div>

</MudContainer>
<details>
    <summary>Plus d'info/Mentions légales </summary>
    <MudGrid>
        <MudItem xs="12" >
            <footer>
                © Copyright felixyangyicheng
                <p>
                    MIT License
                </p>
                <p>
                    <a href="https://felixyangyicheng.github.io/legal">Mentions légales</a>
                </p>
                <div id="disclaimer">

                    The maintainer of this site is not responsible for the content, disposition, or behavior of this Web
                    property, which is independently owned and maintained. For inquiries, please contact the site owner or
                    hosting provider.
                </div>
            </footer>
        </MudItem>
        <MudItem xs="12">
            <section>
                <p>Runtime information</p>
                <p>@RuntimeInformation.FrameworkDescription / @RuntimeInformation.ProcessArchitecture</p>
                <p>@RuntimeInformation.OSDescription / @RuntimeInformation.OSArchitecture</p>
                <p>@RuntimeInformation.RuntimeIdentifier </p>
            </section>
        </MudItem>
    </MudGrid>





</details>
@code {
    private string? MarkdownString { get; set; } = "### README.md";
    private string? HtmlString { get; set; }
    private bool loading { get; set; }
    StringBuilder rawStringBuilder = new StringBuilder("");
    [NotNull]
    private Markdown? MarkdownSetValue { get; set; }

    protected async Task SetMarkdownString(string text)
    {
        MarkdownString = text;
        await InvokeAsync(StateHasChanged);

    }
    protected override async Task OnParametersSetAsync()
    {
        loading = true;
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri("https://raw.githubusercontent.com/felixyangyicheng/felixyangyicheng.github.io/gh-pages/README.md");
        var result = await client.GetAsync("");
        using (StreamReader readtext = new StreamReader(await result.Content.ReadAsStreamAsync()))
        {
            while (!readtext.EndOfStream)
            {
                rawStringBuilder.Append("\r " + readtext.ReadLine());
            }
            loading = false;
        }

        await Task.Delay(600);
        await MarkdownSetValue.SetValue(rawStringBuilder.ToString());

        StateHasChanged();

    }



}